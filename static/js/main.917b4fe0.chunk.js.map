{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","userId","getUser","usersFromServer","find","App","useState","setTodos","setTitle","setUserId","hasTitleError","setTitleError","hasUserIdError","setUserIdError","useEffect","initialTodos","todosFromServer","action","method","onSubmit","event","preventDefault","newTitle","newUserId","newToDo","Math","max","currentToDos","addToDo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.917b4fe0.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/ToDo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={\n      classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })\n    }\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/ToDo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.min.css';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/ToDo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(\n    user => user.id === userId,\n  );\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserIdError, setUserIdError] = useState(false);\n\n  useEffect(() => {\n    const initialTodos = todosFromServer.map(todo => ({\n      ...todo,\n      user: getUser(todo.userId),\n    }));\n\n    setTodos(initialTodos);\n  }, []);\n\n  function getIdForAddToDo() {\n    return Math.max(...todos.map(todo => todo.id));\n  }\n\n  function addToDo(newTitle: string, newUserId: number): void {\n    const newToDo: Todo = {\n      id: getIdForAddToDo() + 1,\n      title: newTitle,\n      userId: newUserId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    setTodos(currentToDos => [...currentToDos, newToDo]);\n  }\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addToDo(title, userId);\n    setTitle('');\n    setUserId(0);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n\n          <input\n            className=\"input is-large\"\n            type=\"text\"\n            placeholder=\"Task\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={event => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            className=\"select is-multiple is-large\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => {\n              setUserId(+event.target.value);\n              setUserIdError(false);\n            }}\n          >\n            <option\n              className=\"nameadd\"\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          className=\"button is-medium is-rounded\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}